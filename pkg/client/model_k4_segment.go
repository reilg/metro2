/*
METRO2 API

Moov Metro2 ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing and validating Metro2 files. Metro2 is an open-source consumer credit history report for credit report file creation and validation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// K4Segment struct for K4Segment
type K4Segment struct {
	SegmentIdentifier string `json:"segmentIdentifier"`
	SpecializedPaymentIndicator int32 `json:"specializedPaymentIndicator"`
	DeferredPaymentStartDate *time.Time `json:"deferredPaymentStartDate,omitempty"`
	BalloonPaymentDueDate *time.Time `json:"balloonPaymentDueDate,omitempty"`
	BalloonPaymentAmount *int32 `json:"balloonPaymentAmount,omitempty"`
}

// NewK4Segment instantiates a new K4Segment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewK4Segment(segmentIdentifier string, specializedPaymentIndicator int32) *K4Segment {
	this := K4Segment{}
	this.SegmentIdentifier = segmentIdentifier
	this.SpecializedPaymentIndicator = specializedPaymentIndicator
	return &this
}

// NewK4SegmentWithDefaults instantiates a new K4Segment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewK4SegmentWithDefaults() *K4Segment {
	this := K4Segment{}
	return &this
}

// GetSegmentIdentifier returns the SegmentIdentifier field value
func (o *K4Segment) GetSegmentIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SegmentIdentifier
}

// GetSegmentIdentifierOk returns a tuple with the SegmentIdentifier field value
// and a boolean to check if the value has been set.
func (o *K4Segment) GetSegmentIdentifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SegmentIdentifier, true
}

// SetSegmentIdentifier sets field value
func (o *K4Segment) SetSegmentIdentifier(v string) {
	o.SegmentIdentifier = v
}

// GetSpecializedPaymentIndicator returns the SpecializedPaymentIndicator field value
func (o *K4Segment) GetSpecializedPaymentIndicator() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SpecializedPaymentIndicator
}

// GetSpecializedPaymentIndicatorOk returns a tuple with the SpecializedPaymentIndicator field value
// and a boolean to check if the value has been set.
func (o *K4Segment) GetSpecializedPaymentIndicatorOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SpecializedPaymentIndicator, true
}

// SetSpecializedPaymentIndicator sets field value
func (o *K4Segment) SetSpecializedPaymentIndicator(v int32) {
	o.SpecializedPaymentIndicator = v
}

// GetDeferredPaymentStartDate returns the DeferredPaymentStartDate field value if set, zero value otherwise.
func (o *K4Segment) GetDeferredPaymentStartDate() time.Time {
	if o == nil || o.DeferredPaymentStartDate == nil {
		var ret time.Time
		return ret
	}
	return *o.DeferredPaymentStartDate
}

// GetDeferredPaymentStartDateOk returns a tuple with the DeferredPaymentStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K4Segment) GetDeferredPaymentStartDateOk() (*time.Time, bool) {
	if o == nil || o.DeferredPaymentStartDate == nil {
		return nil, false
	}
	return o.DeferredPaymentStartDate, true
}

// HasDeferredPaymentStartDate returns a boolean if a field has been set.
func (o *K4Segment) HasDeferredPaymentStartDate() bool {
	if o != nil && o.DeferredPaymentStartDate != nil {
		return true
	}

	return false
}

// SetDeferredPaymentStartDate gets a reference to the given time.Time and assigns it to the DeferredPaymentStartDate field.
func (o *K4Segment) SetDeferredPaymentStartDate(v time.Time) {
	o.DeferredPaymentStartDate = &v
}

// GetBalloonPaymentDueDate returns the BalloonPaymentDueDate field value if set, zero value otherwise.
func (o *K4Segment) GetBalloonPaymentDueDate() time.Time {
	if o == nil || o.BalloonPaymentDueDate == nil {
		var ret time.Time
		return ret
	}
	return *o.BalloonPaymentDueDate
}

// GetBalloonPaymentDueDateOk returns a tuple with the BalloonPaymentDueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K4Segment) GetBalloonPaymentDueDateOk() (*time.Time, bool) {
	if o == nil || o.BalloonPaymentDueDate == nil {
		return nil, false
	}
	return o.BalloonPaymentDueDate, true
}

// HasBalloonPaymentDueDate returns a boolean if a field has been set.
func (o *K4Segment) HasBalloonPaymentDueDate() bool {
	if o != nil && o.BalloonPaymentDueDate != nil {
		return true
	}

	return false
}

// SetBalloonPaymentDueDate gets a reference to the given time.Time and assigns it to the BalloonPaymentDueDate field.
func (o *K4Segment) SetBalloonPaymentDueDate(v time.Time) {
	o.BalloonPaymentDueDate = &v
}

// GetBalloonPaymentAmount returns the BalloonPaymentAmount field value if set, zero value otherwise.
func (o *K4Segment) GetBalloonPaymentAmount() int32 {
	if o == nil || o.BalloonPaymentAmount == nil {
		var ret int32
		return ret
	}
	return *o.BalloonPaymentAmount
}

// GetBalloonPaymentAmountOk returns a tuple with the BalloonPaymentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K4Segment) GetBalloonPaymentAmountOk() (*int32, bool) {
	if o == nil || o.BalloonPaymentAmount == nil {
		return nil, false
	}
	return o.BalloonPaymentAmount, true
}

// HasBalloonPaymentAmount returns a boolean if a field has been set.
func (o *K4Segment) HasBalloonPaymentAmount() bool {
	if o != nil && o.BalloonPaymentAmount != nil {
		return true
	}

	return false
}

// SetBalloonPaymentAmount gets a reference to the given int32 and assigns it to the BalloonPaymentAmount field.
func (o *K4Segment) SetBalloonPaymentAmount(v int32) {
	o.BalloonPaymentAmount = &v
}

func (o K4Segment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["segmentIdentifier"] = o.SegmentIdentifier
	}
	if true {
		toSerialize["specializedPaymentIndicator"] = o.SpecializedPaymentIndicator
	}
	if o.DeferredPaymentStartDate != nil {
		toSerialize["deferredPaymentStartDate"] = o.DeferredPaymentStartDate
	}
	if o.BalloonPaymentDueDate != nil {
		toSerialize["balloonPaymentDueDate"] = o.BalloonPaymentDueDate
	}
	if o.BalloonPaymentAmount != nil {
		toSerialize["balloonPaymentAmount"] = o.BalloonPaymentAmount
	}
	return json.Marshal(toSerialize)
}

type NullableK4Segment struct {
	value *K4Segment
	isSet bool
}

func (v NullableK4Segment) Get() *K4Segment {
	return v.value
}

func (v *NullableK4Segment) Set(val *K4Segment) {
	v.value = val
	v.isSet = true
}

func (v NullableK4Segment) IsSet() bool {
	return v.isSet
}

func (v *NullableK4Segment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableK4Segment(val *K4Segment) *NullableK4Segment {
	return &NullableK4Segment{value: val, isSet: true}
}

func (v NullableK4Segment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableK4Segment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


