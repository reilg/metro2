/*
METRO2 API

Moov Metro2 ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing and validating Metro2 files. Metro2 is an open-source consumer credit history report for credit report file creation and validation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// HeaderRecord struct for HeaderRecord
type HeaderRecord struct {
	BlockDescriptorWord *int32 `json:"blockDescriptorWord,omitempty"`
	RecordDescriptorWord int32 `json:"recordDescriptorWord"`
	RecordIdentifier string `json:"recordIdentifier"`
	CycleIdentifier *string `json:"cycleIdentifier,omitempty"`
	InnovisProgramIdentifier *string `json:"innovisProgramIdentifier,omitempty"`
	EquifaxProgramIdentifier *string `json:"equifaxProgramIdentifier,omitempty"`
	ExperianProgramIdentifier *string `json:"experianProgramIdentifier,omitempty"`
	TransUnionProgramIdentifier *string `json:"transUnionProgramIdentifier,omitempty"`
	ActivityDate time.Time `json:"activityDate"`
	DateCreated time.Time `json:"dateCreated"`
	ProgramDate *time.Time `json:"programDate,omitempty"`
	ProgramRevisionDate *time.Time `json:"programRevisionDate,omitempty"`
	ReporterName string `json:"reporterName"`
	ReporterAddress string `json:"reporterAddress"`
	ReporterTelephoneNumber *int64 `json:"reporterTelephoneNumber,omitempty"`
	SoftwareVendorName *string `json:"softwareVendorName,omitempty"`
	SoftwareVersionNumber *string `json:"softwareVersionNumber,omitempty"`
	PrbcProgramIdentifier *string `json:"prbcProgramIdentifier,omitempty"`
}

// NewHeaderRecord instantiates a new HeaderRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeaderRecord(recordDescriptorWord int32, recordIdentifier string, activityDate time.Time, dateCreated time.Time, reporterName string, reporterAddress string) *HeaderRecord {
	this := HeaderRecord{}
	this.RecordDescriptorWord = recordDescriptorWord
	this.RecordIdentifier = recordIdentifier
	this.ActivityDate = activityDate
	this.DateCreated = dateCreated
	this.ReporterName = reporterName
	this.ReporterAddress = reporterAddress
	return &this
}

// NewHeaderRecordWithDefaults instantiates a new HeaderRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeaderRecordWithDefaults() *HeaderRecord {
	this := HeaderRecord{}
	return &this
}

// GetBlockDescriptorWord returns the BlockDescriptorWord field value if set, zero value otherwise.
func (o *HeaderRecord) GetBlockDescriptorWord() int32 {
	if o == nil || o.BlockDescriptorWord == nil {
		var ret int32
		return ret
	}
	return *o.BlockDescriptorWord
}

// GetBlockDescriptorWordOk returns a tuple with the BlockDescriptorWord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetBlockDescriptorWordOk() (*int32, bool) {
	if o == nil || o.BlockDescriptorWord == nil {
		return nil, false
	}
	return o.BlockDescriptorWord, true
}

// HasBlockDescriptorWord returns a boolean if a field has been set.
func (o *HeaderRecord) HasBlockDescriptorWord() bool {
	if o != nil && o.BlockDescriptorWord != nil {
		return true
	}

	return false
}

// SetBlockDescriptorWord gets a reference to the given int32 and assigns it to the BlockDescriptorWord field.
func (o *HeaderRecord) SetBlockDescriptorWord(v int32) {
	o.BlockDescriptorWord = &v
}

// GetRecordDescriptorWord returns the RecordDescriptorWord field value
func (o *HeaderRecord) GetRecordDescriptorWord() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RecordDescriptorWord
}

// GetRecordDescriptorWordOk returns a tuple with the RecordDescriptorWord field value
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetRecordDescriptorWordOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RecordDescriptorWord, true
}

// SetRecordDescriptorWord sets field value
func (o *HeaderRecord) SetRecordDescriptorWord(v int32) {
	o.RecordDescriptorWord = v
}

// GetRecordIdentifier returns the RecordIdentifier field value
func (o *HeaderRecord) GetRecordIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecordIdentifier
}

// GetRecordIdentifierOk returns a tuple with the RecordIdentifier field value
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetRecordIdentifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RecordIdentifier, true
}

// SetRecordIdentifier sets field value
func (o *HeaderRecord) SetRecordIdentifier(v string) {
	o.RecordIdentifier = v
}

// GetCycleIdentifier returns the CycleIdentifier field value if set, zero value otherwise.
func (o *HeaderRecord) GetCycleIdentifier() string {
	if o == nil || o.CycleIdentifier == nil {
		var ret string
		return ret
	}
	return *o.CycleIdentifier
}

// GetCycleIdentifierOk returns a tuple with the CycleIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetCycleIdentifierOk() (*string, bool) {
	if o == nil || o.CycleIdentifier == nil {
		return nil, false
	}
	return o.CycleIdentifier, true
}

// HasCycleIdentifier returns a boolean if a field has been set.
func (o *HeaderRecord) HasCycleIdentifier() bool {
	if o != nil && o.CycleIdentifier != nil {
		return true
	}

	return false
}

// SetCycleIdentifier gets a reference to the given string and assigns it to the CycleIdentifier field.
func (o *HeaderRecord) SetCycleIdentifier(v string) {
	o.CycleIdentifier = &v
}

// GetInnovisProgramIdentifier returns the InnovisProgramIdentifier field value if set, zero value otherwise.
func (o *HeaderRecord) GetInnovisProgramIdentifier() string {
	if o == nil || o.InnovisProgramIdentifier == nil {
		var ret string
		return ret
	}
	return *o.InnovisProgramIdentifier
}

// GetInnovisProgramIdentifierOk returns a tuple with the InnovisProgramIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetInnovisProgramIdentifierOk() (*string, bool) {
	if o == nil || o.InnovisProgramIdentifier == nil {
		return nil, false
	}
	return o.InnovisProgramIdentifier, true
}

// HasInnovisProgramIdentifier returns a boolean if a field has been set.
func (o *HeaderRecord) HasInnovisProgramIdentifier() bool {
	if o != nil && o.InnovisProgramIdentifier != nil {
		return true
	}

	return false
}

// SetInnovisProgramIdentifier gets a reference to the given string and assigns it to the InnovisProgramIdentifier field.
func (o *HeaderRecord) SetInnovisProgramIdentifier(v string) {
	o.InnovisProgramIdentifier = &v
}

// GetEquifaxProgramIdentifier returns the EquifaxProgramIdentifier field value if set, zero value otherwise.
func (o *HeaderRecord) GetEquifaxProgramIdentifier() string {
	if o == nil || o.EquifaxProgramIdentifier == nil {
		var ret string
		return ret
	}
	return *o.EquifaxProgramIdentifier
}

// GetEquifaxProgramIdentifierOk returns a tuple with the EquifaxProgramIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetEquifaxProgramIdentifierOk() (*string, bool) {
	if o == nil || o.EquifaxProgramIdentifier == nil {
		return nil, false
	}
	return o.EquifaxProgramIdentifier, true
}

// HasEquifaxProgramIdentifier returns a boolean if a field has been set.
func (o *HeaderRecord) HasEquifaxProgramIdentifier() bool {
	if o != nil && o.EquifaxProgramIdentifier != nil {
		return true
	}

	return false
}

// SetEquifaxProgramIdentifier gets a reference to the given string and assigns it to the EquifaxProgramIdentifier field.
func (o *HeaderRecord) SetEquifaxProgramIdentifier(v string) {
	o.EquifaxProgramIdentifier = &v
}

// GetExperianProgramIdentifier returns the ExperianProgramIdentifier field value if set, zero value otherwise.
func (o *HeaderRecord) GetExperianProgramIdentifier() string {
	if o == nil || o.ExperianProgramIdentifier == nil {
		var ret string
		return ret
	}
	return *o.ExperianProgramIdentifier
}

// GetExperianProgramIdentifierOk returns a tuple with the ExperianProgramIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetExperianProgramIdentifierOk() (*string, bool) {
	if o == nil || o.ExperianProgramIdentifier == nil {
		return nil, false
	}
	return o.ExperianProgramIdentifier, true
}

// HasExperianProgramIdentifier returns a boolean if a field has been set.
func (o *HeaderRecord) HasExperianProgramIdentifier() bool {
	if o != nil && o.ExperianProgramIdentifier != nil {
		return true
	}

	return false
}

// SetExperianProgramIdentifier gets a reference to the given string and assigns it to the ExperianProgramIdentifier field.
func (o *HeaderRecord) SetExperianProgramIdentifier(v string) {
	o.ExperianProgramIdentifier = &v
}

// GetTransUnionProgramIdentifier returns the TransUnionProgramIdentifier field value if set, zero value otherwise.
func (o *HeaderRecord) GetTransUnionProgramIdentifier() string {
	if o == nil || o.TransUnionProgramIdentifier == nil {
		var ret string
		return ret
	}
	return *o.TransUnionProgramIdentifier
}

// GetTransUnionProgramIdentifierOk returns a tuple with the TransUnionProgramIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetTransUnionProgramIdentifierOk() (*string, bool) {
	if o == nil || o.TransUnionProgramIdentifier == nil {
		return nil, false
	}
	return o.TransUnionProgramIdentifier, true
}

// HasTransUnionProgramIdentifier returns a boolean if a field has been set.
func (o *HeaderRecord) HasTransUnionProgramIdentifier() bool {
	if o != nil && o.TransUnionProgramIdentifier != nil {
		return true
	}

	return false
}

// SetTransUnionProgramIdentifier gets a reference to the given string and assigns it to the TransUnionProgramIdentifier field.
func (o *HeaderRecord) SetTransUnionProgramIdentifier(v string) {
	o.TransUnionProgramIdentifier = &v
}

// GetActivityDate returns the ActivityDate field value
func (o *HeaderRecord) GetActivityDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ActivityDate
}

// GetActivityDateOk returns a tuple with the ActivityDate field value
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetActivityDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ActivityDate, true
}

// SetActivityDate sets field value
func (o *HeaderRecord) SetActivityDate(v time.Time) {
	o.ActivityDate = v
}

// GetDateCreated returns the DateCreated field value
func (o *HeaderRecord) GetDateCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DateCreated, true
}

// SetDateCreated sets field value
func (o *HeaderRecord) SetDateCreated(v time.Time) {
	o.DateCreated = v
}

// GetProgramDate returns the ProgramDate field value if set, zero value otherwise.
func (o *HeaderRecord) GetProgramDate() time.Time {
	if o == nil || o.ProgramDate == nil {
		var ret time.Time
		return ret
	}
	return *o.ProgramDate
}

// GetProgramDateOk returns a tuple with the ProgramDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetProgramDateOk() (*time.Time, bool) {
	if o == nil || o.ProgramDate == nil {
		return nil, false
	}
	return o.ProgramDate, true
}

// HasProgramDate returns a boolean if a field has been set.
func (o *HeaderRecord) HasProgramDate() bool {
	if o != nil && o.ProgramDate != nil {
		return true
	}

	return false
}

// SetProgramDate gets a reference to the given time.Time and assigns it to the ProgramDate field.
func (o *HeaderRecord) SetProgramDate(v time.Time) {
	o.ProgramDate = &v
}

// GetProgramRevisionDate returns the ProgramRevisionDate field value if set, zero value otherwise.
func (o *HeaderRecord) GetProgramRevisionDate() time.Time {
	if o == nil || o.ProgramRevisionDate == nil {
		var ret time.Time
		return ret
	}
	return *o.ProgramRevisionDate
}

// GetProgramRevisionDateOk returns a tuple with the ProgramRevisionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetProgramRevisionDateOk() (*time.Time, bool) {
	if o == nil || o.ProgramRevisionDate == nil {
		return nil, false
	}
	return o.ProgramRevisionDate, true
}

// HasProgramRevisionDate returns a boolean if a field has been set.
func (o *HeaderRecord) HasProgramRevisionDate() bool {
	if o != nil && o.ProgramRevisionDate != nil {
		return true
	}

	return false
}

// SetProgramRevisionDate gets a reference to the given time.Time and assigns it to the ProgramRevisionDate field.
func (o *HeaderRecord) SetProgramRevisionDate(v time.Time) {
	o.ProgramRevisionDate = &v
}

// GetReporterName returns the ReporterName field value
func (o *HeaderRecord) GetReporterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReporterName
}

// GetReporterNameOk returns a tuple with the ReporterName field value
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetReporterNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReporterName, true
}

// SetReporterName sets field value
func (o *HeaderRecord) SetReporterName(v string) {
	o.ReporterName = v
}

// GetReporterAddress returns the ReporterAddress field value
func (o *HeaderRecord) GetReporterAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReporterAddress
}

// GetReporterAddressOk returns a tuple with the ReporterAddress field value
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetReporterAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReporterAddress, true
}

// SetReporterAddress sets field value
func (o *HeaderRecord) SetReporterAddress(v string) {
	o.ReporterAddress = v
}

// GetReporterTelephoneNumber returns the ReporterTelephoneNumber field value if set, zero value otherwise.
func (o *HeaderRecord) GetReporterTelephoneNumber() int64 {
	if o == nil || o.ReporterTelephoneNumber == nil {
		var ret int64
		return ret
	}
	return *o.ReporterTelephoneNumber
}

// GetReporterTelephoneNumberOk returns a tuple with the ReporterTelephoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetReporterTelephoneNumberOk() (*int64, bool) {
	if o == nil || o.ReporterTelephoneNumber == nil {
		return nil, false
	}
	return o.ReporterTelephoneNumber, true
}

// HasReporterTelephoneNumber returns a boolean if a field has been set.
func (o *HeaderRecord) HasReporterTelephoneNumber() bool {
	if o != nil && o.ReporterTelephoneNumber != nil {
		return true
	}

	return false
}

// SetReporterTelephoneNumber gets a reference to the given int64 and assigns it to the ReporterTelephoneNumber field.
func (o *HeaderRecord) SetReporterTelephoneNumber(v int64) {
	o.ReporterTelephoneNumber = &v
}

// GetSoftwareVendorName returns the SoftwareVendorName field value if set, zero value otherwise.
func (o *HeaderRecord) GetSoftwareVendorName() string {
	if o == nil || o.SoftwareVendorName == nil {
		var ret string
		return ret
	}
	return *o.SoftwareVendorName
}

// GetSoftwareVendorNameOk returns a tuple with the SoftwareVendorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetSoftwareVendorNameOk() (*string, bool) {
	if o == nil || o.SoftwareVendorName == nil {
		return nil, false
	}
	return o.SoftwareVendorName, true
}

// HasSoftwareVendorName returns a boolean if a field has been set.
func (o *HeaderRecord) HasSoftwareVendorName() bool {
	if o != nil && o.SoftwareVendorName != nil {
		return true
	}

	return false
}

// SetSoftwareVendorName gets a reference to the given string and assigns it to the SoftwareVendorName field.
func (o *HeaderRecord) SetSoftwareVendorName(v string) {
	o.SoftwareVendorName = &v
}

// GetSoftwareVersionNumber returns the SoftwareVersionNumber field value if set, zero value otherwise.
func (o *HeaderRecord) GetSoftwareVersionNumber() string {
	if o == nil || o.SoftwareVersionNumber == nil {
		var ret string
		return ret
	}
	return *o.SoftwareVersionNumber
}

// GetSoftwareVersionNumberOk returns a tuple with the SoftwareVersionNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetSoftwareVersionNumberOk() (*string, bool) {
	if o == nil || o.SoftwareVersionNumber == nil {
		return nil, false
	}
	return o.SoftwareVersionNumber, true
}

// HasSoftwareVersionNumber returns a boolean if a field has been set.
func (o *HeaderRecord) HasSoftwareVersionNumber() bool {
	if o != nil && o.SoftwareVersionNumber != nil {
		return true
	}

	return false
}

// SetSoftwareVersionNumber gets a reference to the given string and assigns it to the SoftwareVersionNumber field.
func (o *HeaderRecord) SetSoftwareVersionNumber(v string) {
	o.SoftwareVersionNumber = &v
}

// GetPrbcProgramIdentifier returns the PrbcProgramIdentifier field value if set, zero value otherwise.
func (o *HeaderRecord) GetPrbcProgramIdentifier() string {
	if o == nil || o.PrbcProgramIdentifier == nil {
		var ret string
		return ret
	}
	return *o.PrbcProgramIdentifier
}

// GetPrbcProgramIdentifierOk returns a tuple with the PrbcProgramIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeaderRecord) GetPrbcProgramIdentifierOk() (*string, bool) {
	if o == nil || o.PrbcProgramIdentifier == nil {
		return nil, false
	}
	return o.PrbcProgramIdentifier, true
}

// HasPrbcProgramIdentifier returns a boolean if a field has been set.
func (o *HeaderRecord) HasPrbcProgramIdentifier() bool {
	if o != nil && o.PrbcProgramIdentifier != nil {
		return true
	}

	return false
}

// SetPrbcProgramIdentifier gets a reference to the given string and assigns it to the PrbcProgramIdentifier field.
func (o *HeaderRecord) SetPrbcProgramIdentifier(v string) {
	o.PrbcProgramIdentifier = &v
}

func (o HeaderRecord) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BlockDescriptorWord != nil {
		toSerialize["blockDescriptorWord"] = o.BlockDescriptorWord
	}
	if true {
		toSerialize["recordDescriptorWord"] = o.RecordDescriptorWord
	}
	if true {
		toSerialize["recordIdentifier"] = o.RecordIdentifier
	}
	if o.CycleIdentifier != nil {
		toSerialize["cycleIdentifier"] = o.CycleIdentifier
	}
	if o.InnovisProgramIdentifier != nil {
		toSerialize["innovisProgramIdentifier"] = o.InnovisProgramIdentifier
	}
	if o.EquifaxProgramIdentifier != nil {
		toSerialize["equifaxProgramIdentifier"] = o.EquifaxProgramIdentifier
	}
	if o.ExperianProgramIdentifier != nil {
		toSerialize["experianProgramIdentifier"] = o.ExperianProgramIdentifier
	}
	if o.TransUnionProgramIdentifier != nil {
		toSerialize["transUnionProgramIdentifier"] = o.TransUnionProgramIdentifier
	}
	if true {
		toSerialize["activityDate"] = o.ActivityDate
	}
	if true {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.ProgramDate != nil {
		toSerialize["programDate"] = o.ProgramDate
	}
	if o.ProgramRevisionDate != nil {
		toSerialize["programRevisionDate"] = o.ProgramRevisionDate
	}
	if true {
		toSerialize["reporterName"] = o.ReporterName
	}
	if true {
		toSerialize["reporterAddress"] = o.ReporterAddress
	}
	if o.ReporterTelephoneNumber != nil {
		toSerialize["reporterTelephoneNumber"] = o.ReporterTelephoneNumber
	}
	if o.SoftwareVendorName != nil {
		toSerialize["softwareVendorName"] = o.SoftwareVendorName
	}
	if o.SoftwareVersionNumber != nil {
		toSerialize["softwareVersionNumber"] = o.SoftwareVersionNumber
	}
	if o.PrbcProgramIdentifier != nil {
		toSerialize["prbcProgramIdentifier"] = o.PrbcProgramIdentifier
	}
	return json.Marshal(toSerialize)
}

type NullableHeaderRecord struct {
	value *HeaderRecord
	isSet bool
}

func (v NullableHeaderRecord) Get() *HeaderRecord {
	return v.value
}

func (v *NullableHeaderRecord) Set(val *HeaderRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableHeaderRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableHeaderRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeaderRecord(val *HeaderRecord) *NullableHeaderRecord {
	return &NullableHeaderRecord{value: val, isSet: true}
}

func (v NullableHeaderRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeaderRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


