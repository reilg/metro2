/*
METRO2 API

Moov Metro2 ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing and validating Metro2 files. Metro2 is an open-source consumer credit history report for credit report file creation and validation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// N1Segment struct for N1Segment
type N1Segment struct {
	SegmentIdentifier string `json:"segmentIdentifier"`
	EmployerName string `json:"employerName"`
	FirstLineEmployerAddress *string `json:"firstLineEmployerAddress,omitempty"`
	SecondLineEmployerAddress *string `json:"secondLineEmployerAddress,omitempty"`
	EmployerCity *string `json:"employerCity,omitempty"`
	EmployerState *string `json:"employerState,omitempty"`
	ZipCode *string `json:"zipCode,omitempty"`
	Occupation *string `json:"occupation,omitempty"`
}

// NewN1Segment instantiates a new N1Segment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewN1Segment(segmentIdentifier string, employerName string) *N1Segment {
	this := N1Segment{}
	this.SegmentIdentifier = segmentIdentifier
	this.EmployerName = employerName
	return &this
}

// NewN1SegmentWithDefaults instantiates a new N1Segment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewN1SegmentWithDefaults() *N1Segment {
	this := N1Segment{}
	return &this
}

// GetSegmentIdentifier returns the SegmentIdentifier field value
func (o *N1Segment) GetSegmentIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SegmentIdentifier
}

// GetSegmentIdentifierOk returns a tuple with the SegmentIdentifier field value
// and a boolean to check if the value has been set.
func (o *N1Segment) GetSegmentIdentifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SegmentIdentifier, true
}

// SetSegmentIdentifier sets field value
func (o *N1Segment) SetSegmentIdentifier(v string) {
	o.SegmentIdentifier = v
}

// GetEmployerName returns the EmployerName field value
func (o *N1Segment) GetEmployerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmployerName
}

// GetEmployerNameOk returns a tuple with the EmployerName field value
// and a boolean to check if the value has been set.
func (o *N1Segment) GetEmployerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EmployerName, true
}

// SetEmployerName sets field value
func (o *N1Segment) SetEmployerName(v string) {
	o.EmployerName = v
}

// GetFirstLineEmployerAddress returns the FirstLineEmployerAddress field value if set, zero value otherwise.
func (o *N1Segment) GetFirstLineEmployerAddress() string {
	if o == nil || o.FirstLineEmployerAddress == nil {
		var ret string
		return ret
	}
	return *o.FirstLineEmployerAddress
}

// GetFirstLineEmployerAddressOk returns a tuple with the FirstLineEmployerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N1Segment) GetFirstLineEmployerAddressOk() (*string, bool) {
	if o == nil || o.FirstLineEmployerAddress == nil {
		return nil, false
	}
	return o.FirstLineEmployerAddress, true
}

// HasFirstLineEmployerAddress returns a boolean if a field has been set.
func (o *N1Segment) HasFirstLineEmployerAddress() bool {
	if o != nil && o.FirstLineEmployerAddress != nil {
		return true
	}

	return false
}

// SetFirstLineEmployerAddress gets a reference to the given string and assigns it to the FirstLineEmployerAddress field.
func (o *N1Segment) SetFirstLineEmployerAddress(v string) {
	o.FirstLineEmployerAddress = &v
}

// GetSecondLineEmployerAddress returns the SecondLineEmployerAddress field value if set, zero value otherwise.
func (o *N1Segment) GetSecondLineEmployerAddress() string {
	if o == nil || o.SecondLineEmployerAddress == nil {
		var ret string
		return ret
	}
	return *o.SecondLineEmployerAddress
}

// GetSecondLineEmployerAddressOk returns a tuple with the SecondLineEmployerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N1Segment) GetSecondLineEmployerAddressOk() (*string, bool) {
	if o == nil || o.SecondLineEmployerAddress == nil {
		return nil, false
	}
	return o.SecondLineEmployerAddress, true
}

// HasSecondLineEmployerAddress returns a boolean if a field has been set.
func (o *N1Segment) HasSecondLineEmployerAddress() bool {
	if o != nil && o.SecondLineEmployerAddress != nil {
		return true
	}

	return false
}

// SetSecondLineEmployerAddress gets a reference to the given string and assigns it to the SecondLineEmployerAddress field.
func (o *N1Segment) SetSecondLineEmployerAddress(v string) {
	o.SecondLineEmployerAddress = &v
}

// GetEmployerCity returns the EmployerCity field value if set, zero value otherwise.
func (o *N1Segment) GetEmployerCity() string {
	if o == nil || o.EmployerCity == nil {
		var ret string
		return ret
	}
	return *o.EmployerCity
}

// GetEmployerCityOk returns a tuple with the EmployerCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N1Segment) GetEmployerCityOk() (*string, bool) {
	if o == nil || o.EmployerCity == nil {
		return nil, false
	}
	return o.EmployerCity, true
}

// HasEmployerCity returns a boolean if a field has been set.
func (o *N1Segment) HasEmployerCity() bool {
	if o != nil && o.EmployerCity != nil {
		return true
	}

	return false
}

// SetEmployerCity gets a reference to the given string and assigns it to the EmployerCity field.
func (o *N1Segment) SetEmployerCity(v string) {
	o.EmployerCity = &v
}

// GetEmployerState returns the EmployerState field value if set, zero value otherwise.
func (o *N1Segment) GetEmployerState() string {
	if o == nil || o.EmployerState == nil {
		var ret string
		return ret
	}
	return *o.EmployerState
}

// GetEmployerStateOk returns a tuple with the EmployerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N1Segment) GetEmployerStateOk() (*string, bool) {
	if o == nil || o.EmployerState == nil {
		return nil, false
	}
	return o.EmployerState, true
}

// HasEmployerState returns a boolean if a field has been set.
func (o *N1Segment) HasEmployerState() bool {
	if o != nil && o.EmployerState != nil {
		return true
	}

	return false
}

// SetEmployerState gets a reference to the given string and assigns it to the EmployerState field.
func (o *N1Segment) SetEmployerState(v string) {
	o.EmployerState = &v
}

// GetZipCode returns the ZipCode field value if set, zero value otherwise.
func (o *N1Segment) GetZipCode() string {
	if o == nil || o.ZipCode == nil {
		var ret string
		return ret
	}
	return *o.ZipCode
}

// GetZipCodeOk returns a tuple with the ZipCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N1Segment) GetZipCodeOk() (*string, bool) {
	if o == nil || o.ZipCode == nil {
		return nil, false
	}
	return o.ZipCode, true
}

// HasZipCode returns a boolean if a field has been set.
func (o *N1Segment) HasZipCode() bool {
	if o != nil && o.ZipCode != nil {
		return true
	}

	return false
}

// SetZipCode gets a reference to the given string and assigns it to the ZipCode field.
func (o *N1Segment) SetZipCode(v string) {
	o.ZipCode = &v
}

// GetOccupation returns the Occupation field value if set, zero value otherwise.
func (o *N1Segment) GetOccupation() string {
	if o == nil || o.Occupation == nil {
		var ret string
		return ret
	}
	return *o.Occupation
}

// GetOccupationOk returns a tuple with the Occupation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N1Segment) GetOccupationOk() (*string, bool) {
	if o == nil || o.Occupation == nil {
		return nil, false
	}
	return o.Occupation, true
}

// HasOccupation returns a boolean if a field has been set.
func (o *N1Segment) HasOccupation() bool {
	if o != nil && o.Occupation != nil {
		return true
	}

	return false
}

// SetOccupation gets a reference to the given string and assigns it to the Occupation field.
func (o *N1Segment) SetOccupation(v string) {
	o.Occupation = &v
}

func (o N1Segment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["segmentIdentifier"] = o.SegmentIdentifier
	}
	if true {
		toSerialize["employerName"] = o.EmployerName
	}
	if o.FirstLineEmployerAddress != nil {
		toSerialize["firstLineEmployerAddress"] = o.FirstLineEmployerAddress
	}
	if o.SecondLineEmployerAddress != nil {
		toSerialize["secondLineEmployerAddress"] = o.SecondLineEmployerAddress
	}
	if o.EmployerCity != nil {
		toSerialize["employerCity"] = o.EmployerCity
	}
	if o.EmployerState != nil {
		toSerialize["employerState"] = o.EmployerState
	}
	if o.ZipCode != nil {
		toSerialize["zipCode"] = o.ZipCode
	}
	if o.Occupation != nil {
		toSerialize["occupation"] = o.Occupation
	}
	return json.Marshal(toSerialize)
}

type NullableN1Segment struct {
	value *N1Segment
	isSet bool
}

func (v NullableN1Segment) Get() *N1Segment {
	return v.value
}

func (v *NullableN1Segment) Set(val *N1Segment) {
	v.value = val
	v.isSet = true
}

func (v NullableN1Segment) IsSet() bool {
	return v.isSet
}

func (v *NullableN1Segment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableN1Segment(val *N1Segment) *NullableN1Segment {
	return &NullableN1Segment{value: val, isSet: true}
}

func (v NullableN1Segment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableN1Segment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


