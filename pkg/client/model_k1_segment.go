/*
METRO2 API

Moov Metro2 ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing and validating Metro2 files. Metro2 is an open-source consumer credit history report for credit report file creation and validation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// K1Segment struct for K1Segment
type K1Segment struct {
	SegmentIdentifier string `json:"segmentIdentifier"`
	OriginalCreditorName string `json:"originalCreditorName"`
	CreditorClassification int32 `json:"creditorClassification"`
}

// NewK1Segment instantiates a new K1Segment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewK1Segment(segmentIdentifier string, originalCreditorName string, creditorClassification int32) *K1Segment {
	this := K1Segment{}
	this.SegmentIdentifier = segmentIdentifier
	this.OriginalCreditorName = originalCreditorName
	this.CreditorClassification = creditorClassification
	return &this
}

// NewK1SegmentWithDefaults instantiates a new K1Segment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewK1SegmentWithDefaults() *K1Segment {
	this := K1Segment{}
	return &this
}

// GetSegmentIdentifier returns the SegmentIdentifier field value
func (o *K1Segment) GetSegmentIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SegmentIdentifier
}

// GetSegmentIdentifierOk returns a tuple with the SegmentIdentifier field value
// and a boolean to check if the value has been set.
func (o *K1Segment) GetSegmentIdentifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SegmentIdentifier, true
}

// SetSegmentIdentifier sets field value
func (o *K1Segment) SetSegmentIdentifier(v string) {
	o.SegmentIdentifier = v
}

// GetOriginalCreditorName returns the OriginalCreditorName field value
func (o *K1Segment) GetOriginalCreditorName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginalCreditorName
}

// GetOriginalCreditorNameOk returns a tuple with the OriginalCreditorName field value
// and a boolean to check if the value has been set.
func (o *K1Segment) GetOriginalCreditorNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OriginalCreditorName, true
}

// SetOriginalCreditorName sets field value
func (o *K1Segment) SetOriginalCreditorName(v string) {
	o.OriginalCreditorName = v
}

// GetCreditorClassification returns the CreditorClassification field value
func (o *K1Segment) GetCreditorClassification() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreditorClassification
}

// GetCreditorClassificationOk returns a tuple with the CreditorClassification field value
// and a boolean to check if the value has been set.
func (o *K1Segment) GetCreditorClassificationOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreditorClassification, true
}

// SetCreditorClassification sets field value
func (o *K1Segment) SetCreditorClassification(v int32) {
	o.CreditorClassification = v
}

func (o K1Segment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["segmentIdentifier"] = o.SegmentIdentifier
	}
	if true {
		toSerialize["originalCreditorName"] = o.OriginalCreditorName
	}
	if true {
		toSerialize["creditorClassification"] = o.CreditorClassification
	}
	return json.Marshal(toSerialize)
}

type NullableK1Segment struct {
	value *K1Segment
	isSet bool
}

func (v NullableK1Segment) Get() *K1Segment {
	return v.value
}

func (v *NullableK1Segment) Set(val *K1Segment) {
	v.value = val
	v.isSet = true
}

func (v NullableK1Segment) IsSet() bool {
	return v.isSet
}

func (v *NullableK1Segment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableK1Segment(val *K1Segment) *NullableK1Segment {
	return &NullableK1Segment{value: val, isSet: true}
}

func (v NullableK1Segment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableK1Segment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


