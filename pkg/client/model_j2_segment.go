/*
METRO2 API

Moov Metro2 ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing and validating Metro2 files. Metro2 is an open-source consumer credit history report for credit report file creation and validation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// J2Segment struct for J2Segment
type J2Segment struct {
	SegmentIdentifier string `json:"segmentIdentifier"`
	Surname string `json:"surname"`
	FirstName string `json:"firstName"`
	MiddleName *string `json:"middleName,omitempty"`
	GenerationCode *string `json:"generationCode,omitempty"`
	SocialSecurityNumber int32 `json:"socialSecurityNumber"`
	DateBirth time.Time `json:"dateBirth"`
	TelephoneNumber *int64 `json:"telephoneNumber,omitempty"`
	EcoaCode string `json:"ecoaCode"`
	ConsumerInformationIndicator *string `json:"consumerInformationIndicator,omitempty"`
	CountryCode *string `json:"countryCode,omitempty"`
	FirstLineAddress string `json:"firstLineAddress"`
	SecondLineAddress *string `json:"secondLineAddress,omitempty"`
	City string `json:"city"`
	State string `json:"state"`
	ZipCode string `json:"zipCode"`
	AddressIndicator *string `json:"addressIndicator,omitempty"`
	ResidenceCode *string `json:"residenceCode,omitempty"`
}

// NewJ2Segment instantiates a new J2Segment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJ2Segment(segmentIdentifier string, surname string, firstName string, socialSecurityNumber int32, dateBirth time.Time, ecoaCode string, firstLineAddress string, city string, state string, zipCode string) *J2Segment {
	this := J2Segment{}
	this.SegmentIdentifier = segmentIdentifier
	this.Surname = surname
	this.FirstName = firstName
	this.SocialSecurityNumber = socialSecurityNumber
	this.DateBirth = dateBirth
	this.EcoaCode = ecoaCode
	this.FirstLineAddress = firstLineAddress
	this.City = city
	this.State = state
	this.ZipCode = zipCode
	return &this
}

// NewJ2SegmentWithDefaults instantiates a new J2Segment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJ2SegmentWithDefaults() *J2Segment {
	this := J2Segment{}
	return &this
}

// GetSegmentIdentifier returns the SegmentIdentifier field value
func (o *J2Segment) GetSegmentIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SegmentIdentifier
}

// GetSegmentIdentifierOk returns a tuple with the SegmentIdentifier field value
// and a boolean to check if the value has been set.
func (o *J2Segment) GetSegmentIdentifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SegmentIdentifier, true
}

// SetSegmentIdentifier sets field value
func (o *J2Segment) SetSegmentIdentifier(v string) {
	o.SegmentIdentifier = v
}

// GetSurname returns the Surname field value
func (o *J2Segment) GetSurname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Surname
}

// GetSurnameOk returns a tuple with the Surname field value
// and a boolean to check if the value has been set.
func (o *J2Segment) GetSurnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Surname, true
}

// SetSurname sets field value
func (o *J2Segment) SetSurname(v string) {
	o.Surname = v
}

// GetFirstName returns the FirstName field value
func (o *J2Segment) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *J2Segment) GetFirstNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *J2Segment) SetFirstName(v string) {
	o.FirstName = v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *J2Segment) GetMiddleName() string {
	if o == nil || o.MiddleName == nil {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *J2Segment) GetMiddleNameOk() (*string, bool) {
	if o == nil || o.MiddleName == nil {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *J2Segment) HasMiddleName() bool {
	if o != nil && o.MiddleName != nil {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *J2Segment) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetGenerationCode returns the GenerationCode field value if set, zero value otherwise.
func (o *J2Segment) GetGenerationCode() string {
	if o == nil || o.GenerationCode == nil {
		var ret string
		return ret
	}
	return *o.GenerationCode
}

// GetGenerationCodeOk returns a tuple with the GenerationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *J2Segment) GetGenerationCodeOk() (*string, bool) {
	if o == nil || o.GenerationCode == nil {
		return nil, false
	}
	return o.GenerationCode, true
}

// HasGenerationCode returns a boolean if a field has been set.
func (o *J2Segment) HasGenerationCode() bool {
	if o != nil && o.GenerationCode != nil {
		return true
	}

	return false
}

// SetGenerationCode gets a reference to the given string and assigns it to the GenerationCode field.
func (o *J2Segment) SetGenerationCode(v string) {
	o.GenerationCode = &v
}

// GetSocialSecurityNumber returns the SocialSecurityNumber field value
func (o *J2Segment) GetSocialSecurityNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SocialSecurityNumber
}

// GetSocialSecurityNumberOk returns a tuple with the SocialSecurityNumber field value
// and a boolean to check if the value has been set.
func (o *J2Segment) GetSocialSecurityNumberOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SocialSecurityNumber, true
}

// SetSocialSecurityNumber sets field value
func (o *J2Segment) SetSocialSecurityNumber(v int32) {
	o.SocialSecurityNumber = v
}

// GetDateBirth returns the DateBirth field value
func (o *J2Segment) GetDateBirth() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DateBirth
}

// GetDateBirthOk returns a tuple with the DateBirth field value
// and a boolean to check if the value has been set.
func (o *J2Segment) GetDateBirthOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DateBirth, true
}

// SetDateBirth sets field value
func (o *J2Segment) SetDateBirth(v time.Time) {
	o.DateBirth = v
}

// GetTelephoneNumber returns the TelephoneNumber field value if set, zero value otherwise.
func (o *J2Segment) GetTelephoneNumber() int64 {
	if o == nil || o.TelephoneNumber == nil {
		var ret int64
		return ret
	}
	return *o.TelephoneNumber
}

// GetTelephoneNumberOk returns a tuple with the TelephoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *J2Segment) GetTelephoneNumberOk() (*int64, bool) {
	if o == nil || o.TelephoneNumber == nil {
		return nil, false
	}
	return o.TelephoneNumber, true
}

// HasTelephoneNumber returns a boolean if a field has been set.
func (o *J2Segment) HasTelephoneNumber() bool {
	if o != nil && o.TelephoneNumber != nil {
		return true
	}

	return false
}

// SetTelephoneNumber gets a reference to the given int64 and assigns it to the TelephoneNumber field.
func (o *J2Segment) SetTelephoneNumber(v int64) {
	o.TelephoneNumber = &v
}

// GetEcoaCode returns the EcoaCode field value
func (o *J2Segment) GetEcoaCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EcoaCode
}

// GetEcoaCodeOk returns a tuple with the EcoaCode field value
// and a boolean to check if the value has been set.
func (o *J2Segment) GetEcoaCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EcoaCode, true
}

// SetEcoaCode sets field value
func (o *J2Segment) SetEcoaCode(v string) {
	o.EcoaCode = v
}

// GetConsumerInformationIndicator returns the ConsumerInformationIndicator field value if set, zero value otherwise.
func (o *J2Segment) GetConsumerInformationIndicator() string {
	if o == nil || o.ConsumerInformationIndicator == nil {
		var ret string
		return ret
	}
	return *o.ConsumerInformationIndicator
}

// GetConsumerInformationIndicatorOk returns a tuple with the ConsumerInformationIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *J2Segment) GetConsumerInformationIndicatorOk() (*string, bool) {
	if o == nil || o.ConsumerInformationIndicator == nil {
		return nil, false
	}
	return o.ConsumerInformationIndicator, true
}

// HasConsumerInformationIndicator returns a boolean if a field has been set.
func (o *J2Segment) HasConsumerInformationIndicator() bool {
	if o != nil && o.ConsumerInformationIndicator != nil {
		return true
	}

	return false
}

// SetConsumerInformationIndicator gets a reference to the given string and assigns it to the ConsumerInformationIndicator field.
func (o *J2Segment) SetConsumerInformationIndicator(v string) {
	o.ConsumerInformationIndicator = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *J2Segment) GetCountryCode() string {
	if o == nil || o.CountryCode == nil {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *J2Segment) GetCountryCodeOk() (*string, bool) {
	if o == nil || o.CountryCode == nil {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *J2Segment) HasCountryCode() bool {
	if o != nil && o.CountryCode != nil {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *J2Segment) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetFirstLineAddress returns the FirstLineAddress field value
func (o *J2Segment) GetFirstLineAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstLineAddress
}

// GetFirstLineAddressOk returns a tuple with the FirstLineAddress field value
// and a boolean to check if the value has been set.
func (o *J2Segment) GetFirstLineAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FirstLineAddress, true
}

// SetFirstLineAddress sets field value
func (o *J2Segment) SetFirstLineAddress(v string) {
	o.FirstLineAddress = v
}

// GetSecondLineAddress returns the SecondLineAddress field value if set, zero value otherwise.
func (o *J2Segment) GetSecondLineAddress() string {
	if o == nil || o.SecondLineAddress == nil {
		var ret string
		return ret
	}
	return *o.SecondLineAddress
}

// GetSecondLineAddressOk returns a tuple with the SecondLineAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *J2Segment) GetSecondLineAddressOk() (*string, bool) {
	if o == nil || o.SecondLineAddress == nil {
		return nil, false
	}
	return o.SecondLineAddress, true
}

// HasSecondLineAddress returns a boolean if a field has been set.
func (o *J2Segment) HasSecondLineAddress() bool {
	if o != nil && o.SecondLineAddress != nil {
		return true
	}

	return false
}

// SetSecondLineAddress gets a reference to the given string and assigns it to the SecondLineAddress field.
func (o *J2Segment) SetSecondLineAddress(v string) {
	o.SecondLineAddress = &v
}

// GetCity returns the City field value
func (o *J2Segment) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *J2Segment) GetCityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *J2Segment) SetCity(v string) {
	o.City = v
}

// GetState returns the State field value
func (o *J2Segment) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *J2Segment) GetStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *J2Segment) SetState(v string) {
	o.State = v
}

// GetZipCode returns the ZipCode field value
func (o *J2Segment) GetZipCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZipCode
}

// GetZipCodeOk returns a tuple with the ZipCode field value
// and a boolean to check if the value has been set.
func (o *J2Segment) GetZipCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ZipCode, true
}

// SetZipCode sets field value
func (o *J2Segment) SetZipCode(v string) {
	o.ZipCode = v
}

// GetAddressIndicator returns the AddressIndicator field value if set, zero value otherwise.
func (o *J2Segment) GetAddressIndicator() string {
	if o == nil || o.AddressIndicator == nil {
		var ret string
		return ret
	}
	return *o.AddressIndicator
}

// GetAddressIndicatorOk returns a tuple with the AddressIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *J2Segment) GetAddressIndicatorOk() (*string, bool) {
	if o == nil || o.AddressIndicator == nil {
		return nil, false
	}
	return o.AddressIndicator, true
}

// HasAddressIndicator returns a boolean if a field has been set.
func (o *J2Segment) HasAddressIndicator() bool {
	if o != nil && o.AddressIndicator != nil {
		return true
	}

	return false
}

// SetAddressIndicator gets a reference to the given string and assigns it to the AddressIndicator field.
func (o *J2Segment) SetAddressIndicator(v string) {
	o.AddressIndicator = &v
}

// GetResidenceCode returns the ResidenceCode field value if set, zero value otherwise.
func (o *J2Segment) GetResidenceCode() string {
	if o == nil || o.ResidenceCode == nil {
		var ret string
		return ret
	}
	return *o.ResidenceCode
}

// GetResidenceCodeOk returns a tuple with the ResidenceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *J2Segment) GetResidenceCodeOk() (*string, bool) {
	if o == nil || o.ResidenceCode == nil {
		return nil, false
	}
	return o.ResidenceCode, true
}

// HasResidenceCode returns a boolean if a field has been set.
func (o *J2Segment) HasResidenceCode() bool {
	if o != nil && o.ResidenceCode != nil {
		return true
	}

	return false
}

// SetResidenceCode gets a reference to the given string and assigns it to the ResidenceCode field.
func (o *J2Segment) SetResidenceCode(v string) {
	o.ResidenceCode = &v
}

func (o J2Segment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["segmentIdentifier"] = o.SegmentIdentifier
	}
	if true {
		toSerialize["surname"] = o.Surname
	}
	if true {
		toSerialize["firstName"] = o.FirstName
	}
	if o.MiddleName != nil {
		toSerialize["middleName"] = o.MiddleName
	}
	if o.GenerationCode != nil {
		toSerialize["generationCode"] = o.GenerationCode
	}
	if true {
		toSerialize["socialSecurityNumber"] = o.SocialSecurityNumber
	}
	if true {
		toSerialize["dateBirth"] = o.DateBirth
	}
	if o.TelephoneNumber != nil {
		toSerialize["telephoneNumber"] = o.TelephoneNumber
	}
	if true {
		toSerialize["ecoaCode"] = o.EcoaCode
	}
	if o.ConsumerInformationIndicator != nil {
		toSerialize["consumerInformationIndicator"] = o.ConsumerInformationIndicator
	}
	if o.CountryCode != nil {
		toSerialize["countryCode"] = o.CountryCode
	}
	if true {
		toSerialize["firstLineAddress"] = o.FirstLineAddress
	}
	if o.SecondLineAddress != nil {
		toSerialize["secondLineAddress"] = o.SecondLineAddress
	}
	if true {
		toSerialize["city"] = o.City
	}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["zipCode"] = o.ZipCode
	}
	if o.AddressIndicator != nil {
		toSerialize["addressIndicator"] = o.AddressIndicator
	}
	if o.ResidenceCode != nil {
		toSerialize["residenceCode"] = o.ResidenceCode
	}
	return json.Marshal(toSerialize)
}

type NullableJ2Segment struct {
	value *J2Segment
	isSet bool
}

func (v NullableJ2Segment) Get() *J2Segment {
	return v.value
}

func (v *NullableJ2Segment) Set(val *J2Segment) {
	v.value = val
	v.isSet = true
}

func (v NullableJ2Segment) IsSet() bool {
	return v.isSet
}

func (v *NullableJ2Segment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJ2Segment(val *J2Segment) *NullableJ2Segment {
	return &NullableJ2Segment{value: val, isSet: true}
}

func (v NullableJ2Segment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJ2Segment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


